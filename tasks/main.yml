---
# tasks file for users

- name: Creating Groups
  group: 
    name: "{{ item.name }}"
    gid: "{{ item.gid| default(omit) }}"
    state: present
  with_items: "{{ groups_to_create }}"
  tags: ["users", "groups", "group_creation"]

- name: Creating Per-user group
  group: 
    name: "{{ item.username }}"
    gid: "{{ item.gid | default(item.uid) | default(omit) }}"
  with_items: "{{ users }}"
  when: "'group' not in item and users_create_per_user_group"
  tags: ["users", "groups", "per_user_group"]

- name: User Creation
  user:
    name: "{{ item.username }}"
    group: "{{ item.group | default(item.username if users_create_per_user_group else users_group) }}"
    # empty string removes user from all secondary groups
    groups: "{{ item.groups | join(',') if 'groups' in item else '' }}"
    append: "{{ item.append | default(omit) }}"
    shell: "{{ item.shell if item.shell is defined else users_default_shell }}"
    password: "{{ item.password if item.password is defined else '!' }}"
    comment: "{{ item.name if item.name is defined else '' }}"
    uid: "{{ item.uid | default(omit) }}"
    home: "{{ item.home | default('/home/' + item.username)  }}"
    createhome: "{{ 'yes' if users_create_homedirs else 'no' }}"
    generate_ssh_key: "{{ item.generate_ssh_key | default(omit)  }}"
    ssh_key_file: ".ssh/id_{{ item.ssh_key_type | default(users_ssh_key_type) }}"
    ssh_key_passphrase: "{{ item.ssh_key_password | default(omit) }}"
    ssh_key_bits: "{{ item.ssh_key_bits | default(users_ssh_key_bits) }}"
    update_password: "{{ item.update_password | default(omit) }}"
  with_items: "{{ users }}"
  tags: ["users", "user_creation"]

- name: SSH folder of user
  file:
    path: "{{ item.home | default(users_homedir ~ '/' ~ item.username) }}/.ssh"
    owner: "{{ item.username }}"
    group: "{{ item.group if item.group is defined else (users_group if users_group else item.username) }}"
    state: directory
    mode: "0700"
  with_items: "{{ users }}"
  tags: ["users", "ssh_dir"]

- name: SSH Private Key Management
  copy:
    content: "{{ item.ssh_privkey }}"
    dest: "{{ item.home | default(users_homedir ~ '/' ~ item.username) }}/.ssh/id_{{ item.ssh_key_type | default('rsa') }}"
    owner: "{{ item.username }}"
    group: "{{ item.group if item.group is defined else (users_group if users_group else item.username) }}"
    mode: '0600'
  with_items: "{{ users }}"
  when: item.ssh_privkey is defined
  tags: ["users", "ssh_keys", "priv_keys"]

- name: SSH Public Key Management
  authorized_key:
    user: "{{ item.0.username }}"
    key: "{{ item.1 }}"
    path: "{{ item.0.home | default('/home/' + item.0.username)  }}/.ssh/authorized_keys"
  with_subelements:
    - "{{ users }}"
    - ssh_key
    - skip_missing: yes
  tags: ["users", "ssh_keys", "pub_keys"]

- name: Setup user profiles
  blockinfile:
    block: "{{ item.profile }}"
    dest: "{{ item.home | default('/home/' + item.username) }}/.profile"
    owner: "{{ item.username }}"
    group: "{{ item.group | default(item.username if users_create_per_user_group else users_group) }}"
    mode: 0644
    create: true
  when: users_create_homedirs and item.profile is defined
  with_items: "{{ users }}"
  tags: ["users", "profile"]

- name: Group(s) that will be removed
  group:
    name: "{{ item.name }}"
    state: absent
  with_items: "{{ groups_to_remove }}"
  tags: ["users", "group_remove"]

- name: User(s) that will be removed
  user:
    name: "{{ item.username }}"
    state: absent
    remove: "{{ item.remove | default(omit) }}"
    force: "{{ item.force | default(omit) }}"
  with_items: "{{ users_to_remove }}"
  tags: ["users", "user_remove"]

- name: Per-user group that will be removed
  group: 
    name: "{{ item.username }}"
    state: absent
  with_items: "{{ users_to_remove }}"
  when: users_create_per_user_group
  tags: ["users", "per_user_group_remove"]

